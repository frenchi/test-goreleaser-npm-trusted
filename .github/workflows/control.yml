name: control-publish

on:
  push:
    tags:
      - "v*-control"

permissions:
  contents: write
  id-token: write

jobs:
  control:
    environment: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node for npm Trusted Publishing
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Ensure latest npm (>= 11.5.1)
        run: npm install -g npm@latest

      - name: Toolchain info
        run: |
          node --version
          npm --version
          npm config get registry
          npm config set loglevel silly

      - name: Mask potential tokens
        run: |
          echo "::add-mask::${NODE_AUTH_TOKEN}"
          echo "::add-mask::${NPM_TOKEN}"

      - name: Env snapshot (sanitized)
        run: |
          printenv | sort | sed -E 's/(NODE_AUTH_TOKEN|NPM_TOKEN)=.*/\1=REDACTED/g'

      # Inject token only for token scenarios
      - name: Set token for token-allowed scenarios (v0.0.2-control, v0.0.3-control)
        if: ${{ (github.ref_name == 'v0.0.2-control' || github.ref_name == 'v0.0.3-control') }}
        run: echo "NODE_AUTH_TOKEN=${NPM_TOKEN}" >> $GITHUB_ENV
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Ensure no token for OIDC scenarios
      - name: Ensure no token for OIDC scenarios (v0.0.1-control, v0.0.4-control)
        if: ${{(github.ref_name == 'v0.0.1-control' || github.ref_name == 'v0.0.4-control') }}
        run: echo "NODE_AUTH_TOKEN=" >> $GITHUB_ENV
      - name: Build minimal control package and publish
        run: |
          rm -rf control-pkg
          mkdir -p control-pkg
          cd control-pkg
          VERSION="${GITHUB_REF_NAME#v}"
          VERSION="${VERSION%-control}"
          printf '{\n'
          printf '  "name": "@frenchi/test-goreleaser-npm-trusted-control",\n'
          printf '  "version": "%s",\n' "$VERSION"
          printf '  "description": "control path publish",\n'
          printf '  "repository": { "type": "git", "url": "https://github.com/frenchi/test-goreleaser-npm-trusted" },\n'
          printf '  "bugs": { "url": "https://github.com/frenchi/test-goreleaser-npm-trusted/issues" },\n'
          printf '  "homepage": "https://github.com/frenchi/test-goreleaser-npm-trusted#readme",\n'
          printf '  "publishConfig": { "access": "public" }\n'
          printf '}\n' > package.json
          echo 'control' > index.txt
          npm publish --access public
